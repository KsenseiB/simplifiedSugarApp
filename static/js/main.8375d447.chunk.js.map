{"version":3,"sources":["components/UpdateTodo/UpdateTodo.js","components/UpdateTodo/index.js","components/TodoLists/index.js","components/TodoLists/TodoLists.js","components/DisplayTodo/DisplayTodo.js","components/DisplayTodo/index.js","components/CreateTodo/index.js","components/CreateTodo/CreateTodo.js","App.js","index.js"],"names":["UpdateTodo","_id","closeHandler","updateHandler","useState","title","description","todoInfo","setTodoInfo","handleChange","e","data","target","name","value","className","onSubmit","preventDefault","axios","put","then","res","catch","err","console","error","submitHanlder","htmlFor","type","onChange","TodoLists","todoInfos","editHandler","deleteHandler","onClick","DisplayTodo","id","setId","update","setUpdate","infoTodo","setInfoTodo","modal","setModal","useEffect","get","log","message","delete","filter","todo","to","map","index","CreateTodo","post","noValidate","App","exact","path","component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8375d447.chunk.js","sourcesContent":["import { useState } from \"react\";\nimport axios from \"axios\";\n\nfunction UpdateTodo ({ _id, closeHandler, updateHandler }) {\n  const [ todoInfo, setTodoInfo ] = useState({ title: \"\", description: \"\" });\n\n  const handleChange = (e) => {\n    setTodoInfo((data) => ({ ...data, [ e.target.name ]: e.target.value }));\n  };\n\n  const submitHanlder = (e) => {\n    e.preventDefault();\n\n    axios\n      .put(`http://localhost:4000/api/todoapp/${ _id }`, todoInfo)\n      .then((res) => {\n        setTodoInfo({ title: \"\", description: \"\" });\n      })\n      .catch((err) => {\n        console.error(err);\n      });\n  };\n\n  return (\n    <form\n      className=\"form-container\"\n      onSubmit={ (e) => {\n        submitHanlder(e);\n        updateHandler();\n        closeHandler();\n      } }\n    >\n      <label htmlFor=\"title\" className=\"label\">\n        сахар:\n      </label>\n      <input\n        type=\"text\"\n        name=\"title\"\n        className=\"input\"\n        onChange={ handleChange }\n      />\n      <label htmlFor=\"description\" className=\"label\">\n        лантус:\n      </label>\n      <input\n        type=\"textarea\"\n        name=\"description\"\n        className=\"input\"\n        onChange={ handleChange }\n      />\n      <button type=\"submit\" className=\"todo-btn\">\n        изменять\n      </button>\n    </form>\n  );\n}\nexport default UpdateTodo;\n","import UpdateTodo from './UpdateTodo';\nexport default UpdateTodo;\n","import TodoLists from './TodoLists';\nexport default TodoLists;\n","import React from \"react\";\n\nconst TodoLists = ({ todoInfos, editHandler, deleteHandler }) => {\n  const { _id, title, description } = todoInfos;\n\n  return (\n    <>\n      <hr />\n      <li key={ _id }>\n        <div className=\"title-description\">\n          <p>сахар: { title }</p>\n          {/* <h1></h1> */ }\n          <p>лантус: { description }</p>\n        </div>\n        {/* <h1></h1> */ }\n        <div className=\"todo-btn-container\">\n          <button className=\"todo-btn\" name={ _id } onClick={ editHandler }>\n            Изменять\n          </button>\n          <button className=\"todo-btn\" name={ _id } onClick={ deleteHandler }>\n            Удалить\n          </button>\n        </div>\n      </li>\n\n    </>\n  );\n};\n\nexport default TodoLists;\n","import { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport { Link } from \"react-router-dom\";\nimport UpdateTodo from \"../UpdateTodo\";\nimport TodoLists from \"../TodoLists\";\n\nexport function DisplayTodo() {\n  const [id, setId] = useState(\"\");\n  const [update, setUpdate] = useState(false);\n  const [infoTodo, setInfoTodo] = useState([]);\n  const [modal, setModal] = useState(false);\n\n  useEffect(\n    function () {\n      axios\n        .get(\"http://localhost:4000/api/todoapp\")\n        .then((res) => {\n          setInfoTodo(res.data);\n        })\n        .catch((err) => {\n          console.log(err.message);\n        });\n    },\n    [update]\n  );\n\n  const editHandler = (e) => {\n    setId(e.target.name);\n    setModal(true);\n  };\n\n  const updateHandler = () => {\n    setUpdate(!update);\n  };\n\n  const deleteHandler = (e) => {\n    axios.delete(`http://localhost:4000/api/todoapp/${e.target.name}`);\n\n    setInfoTodo((data) => {\n      return data.filter((todo) => todo._id !== e.target.name);\n    });\n  };\n\n  const closeHandler = () => {\n    setId(\"\");\n    setModal(false);\n  };\n\n  return (\n    <section className=\"container\">\n      <Link to=\"/add-list\" className=\"button-new\">\n        <button className=\"todo-btn\">Добавить новое</button>\n      </Link>\n      <section className=\"todo-data\">\n        <h1></h1>\n        <ul className=\"todo-list-block\">\n          {infoTodo.map((todoInfo, index) => (\n            <TodoLists\n              key={index}\n              todoInfos={todoInfo}\n              editHandler={editHandler}\n              deleteHandler={deleteHandler}\n            />\n          ))}\n        </ul>\n      </section>\n      {modal ? (\n        <section className=\"update-container\">\n          <div className=\"update-todo-data\">\n            <p onClick={closeHandler} className=\"close\">\n              &times;\n            </p>\n\n            <UpdateTodo\n              _id={id}\n              closeHandler={closeHandler}\n              updateHandler={updateHandler}\n            />\n          </div>\n        </section>\n      ) : (\n        \"\"\n      )}\n    </section>\n  );\n}\n\nexport default DisplayTodo;\n","import DisplayTodo from './DisplayTodo';\nexport default DisplayTodo;\n","import CreateTodo from './CreateTodo';\nexport default CreateTodo;\n","import { useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport axios from \"axios\";\n\nconst CreateTodo = () => {\n  const [ todoInfo, setTodoInfo ] = useState({ title: \"\", description: \"\" });\n\n  function handleChange (e) {\n    setTodoInfo((data) => ({ ...data, [ e.target.name ]: e.target.value }));\n  }\n\n  function handleSubmit (e) {\n    e.preventDefault();\n\n    axios\n      .post(\"http://localhost:4000/api/todoapp\", todoInfo)\n      .then((res) => {\n        setTodoInfo({ title: \"\", description: \"\" });\n        console.log(res.data.message);\n      })\n      .catch((err) => {\n        console.log(\"Error couldn't create TODO\");\n        console.log(err.message);\n      });\n  }\n\n  return (\n    <section className=\"container\">\n      <Link to=\"/\">\n        <button type=\"button\" className=\"todo-btn todo-btn-back\">\n          назад\n        </button>\n      </Link>\n\n      <section className=\"todo-data\">\n        <form onSubmit={ handleSubmit } className=\"form-container\" noValidate>\n          <label className=\"label\" htmlFor=\"title\">\n            сахар:\n          </label>\n          <input\n            type=\"text\"\n            name=\"title\"\n            value={ todoInfo.title }\n            onChange={ handleChange }\n            className=\"input\"\n          />\n          <label className=\"label\" htmlFor=\"description\">\n            лантус:\n          </label>\n          <input\n            type=\"textarea\"\n            name=\"description\"\n            value={ todoInfo.description }\n            onChange={ handleChange }\n            className=\"input\"\n          />\n          <button type=\"submit\" className=\"todo-btn\">\n            ➕ добавлять\n          </button>\n        </form>\n      </section>\n    </section>\n  );\n};\n\nexport default CreateTodo;\n","import { BrowserRouter, Route } from 'react-router-dom';\nimport DisplayTodo from './components/DisplayTodo';\nimport CreateTodo from './components/CreateTodo';\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"todo-Container\">\n      <BrowserRouter>\n        <Route exact path=\"/\" component={DisplayTodo} />\n        <Route path=\"/add-list\" component={CreateTodo} />\n      </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}